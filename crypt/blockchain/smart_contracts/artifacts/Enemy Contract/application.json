{
    "hints": {
        "create()void": {
            "call_config": {
                "no_op": "CREATE"
            }
        },
        "bootstrap(string,string,string,uint64,uint64,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "challenge(pay,uint64,uint64,uint64,uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "submit_plays(string[],string[])(uint64,uint64,bool)": {
            "structs": {
                "output": {
                    "name": "GameState",
                    "elements": [
                        [
                            "player_hp",
                            "uint64"
                        ],
                        [
                            "enemy_hp",
                            "uint64"
                        ],
                        [
                            "game_over",
                            "bool"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 5,
            "num_uints": 7
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 5
        }
    },
    "schema": {
        "global": {
            "declared": {
                "current_challenger": {
                    "type": "bytes",
                    "key": "current_challenger",
                    "descr": "Address of the current challenger."
                },
                "descr": {
                    "type": "bytes",
                    "key": "descr",
                    "descr": "description of the enemy."
                },
                "dexterity": {
                    "type": "uint64",
                    "key": "dexterity",
                    "descr": "Dexterity of the enemy."
                },
                "enemy_defeated": {
                    "type": "uint64",
                    "key": "enemy_defeated",
                    "descr": "Boolean indicating if the enemy has been defeated."
                },
                "game_active": {
                    "type": "uint64",
                    "key": "game_active",
                    "descr": "Boolean indicating if a game is active."
                },
                "hp": {
                    "type": "uint64",
                    "key": "hp",
                    "descr": "Hit points of the enemy."
                },
                "image_uri": {
                    "type": "bytes",
                    "key": "image_uri",
                    "descr": "IPFS URI of the image of the enemy."
                },
                "intelligence": {
                    "type": "uint64",
                    "key": "intelligence",
                    "descr": "Intelligence of the enemy."
                },
                "name": {
                    "type": "bytes",
                    "key": "name",
                    "descr": "Name of the enemy."
                },
                "owner": {
                    "type": "bytes",
                    "key": "owner",
                    "descr": "Owner of the contract."
                },
                "price": {
                    "type": "uint64",
                    "key": "price",
                    "descr": "Price to challenge the enemy."
                },
                "strength": {
                    "type": "uint64",
                    "key": "strength",
                    "descr": "Strength of the enemy."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "current_enemy_hp": {
                    "type": "uint64",
                    "key": "current_enemy_hp",
                    "descr": "Current enemy hit points."
                },
                "current_player_dexterity": {
                    "type": "uint64",
                    "key": "current_player_dexterity",
                    "descr": "Current player dexterity."
                },
                "current_player_hp": {
                    "type": "uint64",
                    "key": "current_player_hp",
                    "descr": "Current player hit points."
                },
                "current_player_intelligence": {
                    "type": "uint64",
                    "key": "current_player_intelligence",
                    "descr": "Current player intelligence."
                },
                "current_player_strength": {
                    "type": "uint64",
                    "key": "current_player_strength",
                    "descr": "Current player strength."
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "Enemy Contract",
        "methods": [
            {
                "name": "create",
                "args": [],
                "returns": {
                    "type": "void"
                },
                "desc": "Create the contract."
            },
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    },
                    {
                        "type": "string",
                        "name": "descr"
                    },
                    {
                        "type": "string",
                        "name": "image_uri"
                    },
                    {
                        "type": "uint64",
                        "name": "intelligence"
                    },
                    {
                        "type": "uint64",
                        "name": "strength"
                    },
                    {
                        "type": "uint64",
                        "name": "dexterity"
                    },
                    {
                        "type": "uint64",
                        "name": "hp"
                    },
                    {
                        "type": "uint64",
                        "name": "price"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Bootstrap the contract."
            },
            {
                "name": "challenge",
                "args": [
                    {
                        "type": "pay",
                        "name": "txn"
                    },
                    {
                        "type": "uint64",
                        "name": "player_hp"
                    },
                    {
                        "type": "uint64",
                        "name": "player_intelligence"
                    },
                    {
                        "type": "uint64",
                        "name": "player_strength"
                    },
                    {
                        "type": "uint64",
                        "name": "player_dexterity"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Challenge the enemy."
            },
            {
                "name": "submit_plays",
                "args": [
                    {
                        "type": "string[]",
                        "name": "actions",
                        "desc": "A list of three actions."
                    },
                    {
                        "type": "string[]",
                        "name": "attributes"
                    }
                ],
                "returns": {
                    "type": "(uint64,uint64,bool)",
                    "desc": "A GameState object."
                },
                "desc": "Submit a hand of three cards."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {}
}