{
    "hints": {
        "bootstrap(pay,(string,string,string)[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_starting_deck(uint64[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_card(string,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_card(uint64)(string,string,string)": {
            "structs": {
                "output": {
                    "name": "Card",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "desc",
                            "string"
                        ],
                        [
                            "url",
                            "string"
                        ]
                    ]
                }
            },
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_card_aid(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_card_count(uint64)uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "signup(address,uint8,uint8,uint8)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "governor": {
                    "type": "bytes",
                    "key": "governor",
                    "descr": "Address of the governor of the game."
                },
                "n_cards": {
                    "type": "uint64",
                    "key": "n_cards",
                    "descr": "Number of card types in the game."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Algo Crypt Meta State",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "seed",
                        "desc": "seeded transaction"
                    },
                    {
                        "type": "(string,string,string)[]",
                        "name": "card_list"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Bootstrap the game with a list of cards."
            },
            {
                "name": "set_starting_deck",
                "args": [
                    {
                        "type": "uint64[]",
                        "name": "card_list"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Set the starting deck for new members."
            },
            {
                "name": "add_card",
                "args": [
                    {
                        "type": "string",
                        "name": "card_name",
                        "desc": "Name of the card"
                    },
                    {
                        "type": "string",
                        "name": "card_desc",
                        "desc": "Description of the card"
                    },
                    {
                        "type": "string",
                        "name": "card_url",
                        "desc": "URL of the card"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Add a new card to the game."
            },
            {
                "name": "get_card",
                "args": [
                    {
                        "type": "uint64",
                        "name": "card_id",
                        "desc": "Card ID"
                    }
                ],
                "returns": {
                    "type": "(string,string,string)",
                    "desc": "pyteal expression"
                },
                "desc": "Get the card details."
            },
            {
                "name": "get_card_aid",
                "args": [
                    {
                        "type": "uint64",
                        "name": "index",
                        "desc": "Index of the card"
                    }
                ],
                "returns": {
                    "type": "uint64",
                    "desc": "pyteal expression"
                },
                "desc": "Get asset id for a card in the all_cards array."
            },
            {
                "name": "get_card_count",
                "args": [
                    {
                        "type": "uint64",
                        "name": "card_id",
                        "desc": "Card ID"
                    }
                ],
                "returns": {
                    "type": "uint64",
                    "desc": "pyteal expression"
                },
                "desc": "Get the card count."
            },
            {
                "name": "signup",
                "args": [
                    {
                        "type": "address",
                        "name": "address",
                        "desc": "Address of the player"
                    },
                    {
                        "type": "uint8",
                        "name": "strength",
                        "desc": "Strength"
                    },
                    {
                        "type": "uint8",
                        "name": "intelligence",
                        "desc": "Intelligence"
                    },
                    {
                        "type": "uint8",
                        "name": "dexterity",
                        "desc": "Dexterity"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Sign up for the game."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}