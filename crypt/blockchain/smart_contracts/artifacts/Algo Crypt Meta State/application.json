{
    "hints": {
        "bootstrap(pay,(string,string,string)[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_starting_deck(uint64[])void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "add_card(string,string,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "governor": {
                    "type": "bytes",
                    "key": "governor",
                    "descr": "Address of the governor of the game."
                },
                "n_cards": {
                    "type": "uint64",
                    "key": "n_cards",
                    "descr": "Number of card types in the game."
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "Algo Crypt Meta State",
        "methods": [
            {
                "name": "bootstrap",
                "args": [
                    {
                        "type": "pay",
                        "name": "seed",
                        "desc": "seeded transaction"
                    },
                    {
                        "type": "(string,string,string)[]",
                        "name": "card_list"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Bootstrap the game with a list of cards."
            },
            {
                "name": "set_starting_deck",
                "args": [
                    {
                        "type": "uint64[]",
                        "name": "card_list"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Set the starting deck for new members."
            },
            {
                "name": "add_card",
                "args": [
                    {
                        "type": "string",
                        "name": "card_name",
                        "desc": "Name of the card"
                    },
                    {
                        "type": "string",
                        "name": "card_desc",
                        "desc": "Description of the card"
                    },
                    {
                        "type": "string",
                        "name": "card_url",
                        "desc": "URL of the card"
                    }
                ],
                "returns": {
                    "type": "void"
                },
                "desc": "Add a new card to the game."
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}